{"version":3,"file":"static/js/138.f1772bf6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/phone.selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx","webpack://react-homework-template/./src/components/DeleteButton/DeleteButton.module.css?9e77","components/DeleteButton/DeleteButton.jsx","webpack://react-homework-template/./src/components/ContactList/ContactItem.module.css?d8e1","components/ContactList/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"addBtn\":\"ContactForm_addBtn__CACuJ\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilterInput = state => state.contacts.filterInput;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterInput],\n  (contacts, filterInput) =>\n    contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filterInput);\n    })\n);","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAddContact } from 'redux/phone.reduser';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { nanoid } from 'nanoid';\nimport { selectContacts } from 'redux/phone.selectors';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handlePhoneChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n\n    if (\n      contacts.some(\n        item => item.name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      Notify.warning(`${contact.name} is alredy in your contacts`);\n      return;\n    }\n    const newContact = {\n      ...contact,\n      id: nanoid(),\n    };\n    dispatch(fetchAddContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleSubmit}>\n      <label>\n        <p>Name:</p>\n        <input\n          className={css.inputName}\n          type=\"text\"\n          value={name}\n          onChange={handleNameChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <p>Number:</p>\n        <input\n          className={css.inputNumber}\n          type=\"tel\"\n          value={number}\n          onChange={handlePhoneChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[.\\-\\s]?\\(?\\d{1,3}?\\)?[.\\-\\s]?\\d{1,4}[.\\-\\s]?\\d{1,4}[.\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.addBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"searcher\":\"Search_searcher__KFFkr\"};","import css from './Search.module.css';\nimport { filterContact } from 'redux/phone.reduser';\nimport { useDispatch } from 'react-redux';\n\nconst Search = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <input\n      className={css.searcher}\n      onChange={e => dispatch(filterContact(e.target.value))}\n    />\n  );\n};\n\nexport default Search;\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteBtn\":\"DeleteButton_deleteBtn__SVXuC\"};","import css from './DeleteButton.module.css';\n\nconst DeleteButton = ({ userId, handleDeleteUser }) => {\n  return (\n    <button className={css.deleteBtn} onClick={() => handleDeleteUser(userId)}>\n      Delete\n    </button>\n  );\n};\n\nexport default DeleteButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__akpex\"};","import DeleteButton from 'components/DeleteButton/DeleteButton';\n\nimport css from './ContactItem.module.css';\nimport { fetchDeleteContact } from 'redux/phone.reduser';\nimport { useDispatch } from 'react-redux';\nimport Avatar from '@mui/material/Avatar';\nimport PersonIcon from '@mui/icons-material/Person';\n\nconst ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={css.contactItem} id={contact.id}>\n      <Avatar>\n        <PersonIcon />\n      </Avatar>\n\n      <p>{`${contact.name}: ${contact.number}`}</p>\n      <DeleteButton\n        handleDeleteUser={() => dispatch(fetchDeleteContact(contact.id))}\n      />\n    </li>\n  );\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import ContactItem from './ContactItem';\nimport { useSelector } from 'react-redux';\nimport css from './ContactList.module.css';\nimport { selectFilteredContacts } from 'redux/phone.selectors';\n\nconst ContactList = () => {\n  const filtredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ul className={css.contactList}>\n      {filtredContacts.map(contact => (\n        <ContactItem contact={contact} key={contact.id} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React, { useEffect } from 'react';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Search from '../components/Search/Search';\nimport ContactList from '../components/ContactList/ContactList';\nimport css from '../components/App.module.css';\nimport Loader from '../components/Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllContacts } from 'redux/phone.reduser';\nimport { selectIsLoading, selectError } from 'redux/phone.selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const errorMassege = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1 className={css.titleText}>Phone book</h1>\n      <ContactForm />\n      <p className={css.searchText}>Find contacts by name</p>\n      <Search />\n      {isLoading && <Loader />}\n      {errorMassege && (\n        <div>Something went wrong. Error messege: {errorMassege}</div>\n      )}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filterInput","filter","contact","name","toLowerCase","includes","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","className","css","onSubmit","event","preventDefault","some","item","Notify","newContact","id","nanoid","fetchAddContact","type","value","onChange","e","target","pattern","title","required","filterContact","userId","handleDeleteUser","onClick","Avatar","Person","fetchDeleteContact","filtredContacts","map","errorMassege","useEffect","fetchAllContacts","Loader"],"sourceRoot":""}